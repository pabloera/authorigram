[project]
name = "dataanalysis-bolsonarismo"
version = "0.1.0"
description = "Análise de Discurso em Canais do Telegram: Bolsonarismo, Negacionismo e Autoritarismo"
authors = [
    {name = "Pablo Almada", email = "pabloera@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    # Análise de dados
    "pandas>=2.2.3,<3.0.0",
    "numpy>=1.22.4,<2.3.0",
    "scipy>=1.10.1,<2.0.0",
    "matplotlib>=3.7.0,<4.0.0",
    "seaborn>=0.12.0,<1.0.0",
    
    # NetworkX kept for network analysis (non-visualization)
    "networkx>=3.1,<4.0.0",
    
    # Processamento de linguagem natural
    "nltk>=3.8.1,<4.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
    
    # Embeddings e Similaridade Semântica
    "voyageai>=0.2.0,<1.0.0",
    "gensim>=4.3.2,<5.0.0",
    "spacy>=3.6.1,<4.0.0",
    "faiss-cpu>=1.7.4,<2.0.0",
    
    # Utilitários
    "chardet>=5.2.0,<6.0.0",
    "ftfy>=6.1.1,<7.0.0",
    "python-dateutil>=2.8.2,<3.0.0",
    "tqdm>=4.66.1,<5.0.0",
    "pyyaml>=6.0.1,<7.0.0",
    "pyarrow>=15.0.0,<18.0.0",
    
    # Análise de texto adicional
    "textblob>=0.17.1,<0.18.0",
    "langdetect>=1.0.9,<2.0.0",
    "emoji>=2.8.0,<3.0.0",
    
    # Manipulação de dados
    "openpyxl>=3.1.2,<4.0.0",
    "xlrd>=2.0.1,<3.0.0",
    
    # Detecção de encoding
    "charset-normalizer>=3.3.2,<4.0.0",
    
    # Fuzzy matching
    "fuzzywuzzy>=0.18.0,<0.19.0",
    
    # API Anthropic
    "anthropic>=0.40.0,<0.50.0",
    "python-dotenv>=1.0.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.3.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.3.0,<2.0.0",
]

jupyter = [
    "ipykernel>=6.25.2,<7.0.0",
    "jupyter>=1.0.0,<2.0.0",
    "jupyterlab>=4.0.0,<5.0.0",
]

deep-learning = [
    "tensorflow>=2.13.0,<3.0.0",
    "transformers>=4.35.2,<5.0.0",
    "torch>=2.1.0,<3.0.0",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=src"